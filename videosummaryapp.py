# -*- coding: utf-8 -*-
"""VideoSummaryApp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e2-GrikYVS3Ddk74xNiDt3VFRD8KyT9y
"""

#!pip install sentencepiece
#!pip install streamlit
#!pip install pyngrok

import youtube_get
import streamlit as st
import sentencepiece
import youtube_transcript_api
from youtube_transcript_api import YouTubeTranscriptApi
import nltk
import re
import numpy as np
from nltk.corpus import stopwords
import sklearn
from sklearn.feature_extraction.text import TfidfVectorizer
from nltk.tokenize import sent_tokenize
nltk.download('punkt')
from transformers import T5Tokenizer, T5ForConditionalGeneration
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
from pytube import YouTube


col1,col2= st.columns([3, 1])


#youtube logo
col1.image("https://t3.ftcdn.net/jpg/03/00/38/90/360_F_300389025_b5hgHpjDprTySl8loTqJRMipySb1rO0I.jpg",width=250)

st.title("YouTube Video Summarization App")



#get user input
#video url
user_input = st.text_input("Enter a YouTube Link:")


if user_input:
    try:
        # Create a YouTube object
        yt = YouTube(user_input)
        # Get the title of the video
        title = yt.title

        # Display the video title in the Streamlit app
        st.markdown(f'<p style="font-size: 32px;">{title}</p>', unsafe_allow_html=True)

        #st.write(f"Video Title: {title}")

    except Exception as e:
        # Handle exceptions, such as invalid URL or other errors
        st.write(f"An error occurred: URL not found")



#thumbnail image
if user_input:
  try:
    # Create a YouTube object
    yt = YouTube(user_input)

    # Get the thumbnail URL of the video
    thumbnail_url = yt.thumbnail_url

    st.image(thumbnail_url, caption='Video Thumbnail')
  except Exception as e:
    # Handle exceptions, such as invalid URL or other errors
    st.write(f"An error occurred: URL not found")

# Button to perform action
if st.button('Summarize!'):
    if user_input:
        with st.spinner('Generating video summary...'):
            try:
                # Attempt to generate summary
                raw_text = youtube_get.youtube_sub(user_input)
                summary=youtube_get.chunk_and_summarize(raw_text, chunk_size=300)
                condense_summ=youtube_get.remove_redundant_sentences(summary, similarity_threshold=.6)
                clean_sum=youtube_get.capitalize_sentences_and_combine(condense_summ)

                st.write(clean_sum)
            except Exception as e:
                # Handle any errors that occur
                st.write(f"An error occurred: Please enter Valid Link{e}")
    else:
        st.write("Please enter a valid YouTube link")



